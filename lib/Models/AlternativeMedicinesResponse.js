
/**
 * HealthOSLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
var BaseModel = require("./BaseModel");

/**
 * Creates an instance of AlternativeMedicinesResponse
 *
 * @constructor
 */
AlternativeMedicinesResponse = function (obj) {
    if(!obj) {
        this.name = null;     
        this.form = null;     
        this.standardUnits = null;     
        this.packageForm = null;     
        this.price = null;     
        this.size = null;     
        this.manufacturer = null;     
        this.constituents = null;     
        this.schedule = null;     
        this.medicineId = null;     
        //Append to variable dictionary
        this._variableDict['medicineId'] = 'medicine_id';
    } else {
        this.name = (obj.name !== undefined && obj.name !== null)? obj.name : null;
        this.form = (obj.form !== undefined && obj.form !== null)? obj.form : null;
        this.standardUnits = (obj.standardUnits !== undefined && obj.standardUnits !== null)? obj.standardUnits : null;
        this.packageForm = (obj.packageForm !== undefined && obj.packageForm !== null)? obj.packageForm : null;
        this.price = (obj.price !== undefined && obj.price !== null)? obj.price : null;
        this.size = (obj.size !== undefined && obj.size !== null)? obj.size : null;
        this.manufacturer = (obj.manufacturer !== undefined && obj.manufacturer !== null)? obj.manufacturer : null;
        this.constituents = (obj.constituents !== undefined && obj.constituents !== null)? obj.constituents.map(function(model){
            return new Constituent(model);
        }) : null;
        this.schedule = (obj.schedule !== undefined && obj.schedule !== null)? new Schedule(obj.schedule) : null;
        this.medicineId = (obj.medicine_id !== undefined && obj.medicine_id !== null)? obj.medicine_id : null;
        //Append to variable dictionary
        this._variableDict['medicineId'] = 'medicine_id';
    }
};

AlternativeMedicinesResponse.prototype = new BaseModel();
AlternativeMedicinesResponse.prototype.constructor = AlternativeMedicinesResponse;

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AlternativeMedicinesResponse.prototype.getName = function() {
    return this.name;
};

/**
 * Setter for Name
 * 
 * @param {string} value 
 */
AlternativeMedicinesResponse.prototype.setName = function(value) {
    this.name = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AlternativeMedicinesResponse.prototype.getForm = function() {
    return this.form;
};

/**
 * Setter for Form
 * 
 * @param {string} value 
 */
AlternativeMedicinesResponse.prototype.setForm = function(value) {
    this.form = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {int}
 */
AlternativeMedicinesResponse.prototype.getStandardUnits = function() {
    return this.standardUnits;
};

/**
 * Setter for StandardUnits
 * 
 * @param {int} value 
 */
AlternativeMedicinesResponse.prototype.setStandardUnits = function(value) {
    this.standardUnits = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AlternativeMedicinesResponse.prototype.getPackageForm = function() {
    return this.packageForm;
};

/**
 * Setter for PackageForm
 * 
 * @param {string} value 
 */
AlternativeMedicinesResponse.prototype.setPackageForm = function(value) {
    this.packageForm = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {double}
 */
AlternativeMedicinesResponse.prototype.getPrice = function() {
    return this.price;
};

/**
 * Setter for Price
 * 
 * @param {double} value 
 */
AlternativeMedicinesResponse.prototype.setPrice = function(value) {
    this.price = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AlternativeMedicinesResponse.prototype.getSize = function() {
    return this.size;
};

/**
 * Setter for Size
 * 
 * @param {string} value 
 */
AlternativeMedicinesResponse.prototype.setSize = function(value) {
    this.size = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AlternativeMedicinesResponse.prototype.getManufacturer = function() {
    return this.manufacturer;
};

/**
 * Setter for Manufacturer
 * 
 * @param {string} value 
 */
AlternativeMedicinesResponse.prototype.setManufacturer = function(value) {
    this.manufacturer = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {array}
 */
AlternativeMedicinesResponse.prototype.getConstituents = function() {
    return this.constituents;
};

/**
 * Setter for Constituents
 * 
 * @param {array} value 
 */
AlternativeMedicinesResponse.prototype.setConstituents = function(value) {
    this.constituents = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {Schedule}
 */
AlternativeMedicinesResponse.prototype.getSchedule = function() {
    return this.schedule;
};

/**
 * Setter for Schedule
 * 
 * @param {Schedule} value 
 */
AlternativeMedicinesResponse.prototype.setSchedule = function(value) {
    this.schedule = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AlternativeMedicinesResponse.prototype.getMedicineId = function() {
    return this.medicineId;
};

/**
 * Setter for MedicineId
 * 
 * @param {string} value 
 */
AlternativeMedicinesResponse.prototype.setMedicineId = function(value) {
    this.medicineId = value;
};


module.exports = AlternativeMedicinesResponse;
