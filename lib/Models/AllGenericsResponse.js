
/**
 * HealthOSLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
var BaseModel = require("./BaseModel");

/**
 * Creates an instance of AllGenericsResponse
 *
 * @constructor
 */
AllGenericsResponse = function (obj) {
    if(!obj) {
        this.name = null;     
        this.pregnancyCategory = null;     
        this.lactationCategory = null;     
        this.instructions = null;     
        this.faqs = null;     
        this.genricId = null;     
        this.sideEffects = null;     
        this.howItWorks = null;     
        this.therapeuticClass = null;     
        this.usedFor = null;     
        this.strength = null;     
        this.schedule = null;     
        this.alcoholInteractionDescription = null;     
        this.alcoholNteraction = null;     
        //Append to variable dictionary
        this._variableDict['pregnancyCategory'] = 'pregnancy_category';
        this._variableDict['lactationCategory'] = 'lactation_category';
        this._variableDict['genricId'] = 'genric_id';
        this._variableDict['sideEffects'] = 'side_effects';
        this._variableDict['howItWorks'] = 'how_it_works';
        this._variableDict['therapeuticClass'] = 'therapeutic_class';
        this._variableDict['usedFor'] = 'used_for';
        this._variableDict['alcoholInteractionDescription'] = 'alcohol_interaction_description';
        this._variableDict['alcoholNteraction'] = 'alcohol_nteraction';
    } else {
        this.name = (obj.name !== undefined && obj.name !== null)? obj.name : null;
        this.pregnancyCategory = (obj.pregnancy_category !== undefined && obj.pregnancy_category !== null)? obj.pregnancy_category : null;
        this.lactationCategory = (obj.lactation_category !== undefined && obj.lactation_category !== null)? obj.lactation_category : null;
        this.instructions = (obj.instructions !== undefined && obj.instructions !== null)? obj.instructions : null;
        this.faqs = (obj.faqs !== undefined && obj.faqs !== null)? obj.faqs : null;
        this.genricId = (obj.genric_id !== undefined && obj.genric_id !== null)? obj.genric_id : null;
        this.sideEffects = (obj.side_effects !== undefined && obj.side_effects !== null)? obj.side_effects : null;
        this.howItWorks = (obj.how_it_works !== undefined && obj.how_it_works !== null)? obj.how_it_works : null;
        this.therapeuticClass = (obj.therapeutic_class !== undefined && obj.therapeutic_class !== null)? obj.therapeutic_class : null;
        this.usedFor = (obj.used_for !== undefined && obj.used_for !== null)? obj.used_for : null;
        this.strength = (obj.strength !== undefined && obj.strength !== null)? obj.strength : null;
        this.schedule = (obj.schedule !== undefined && obj.schedule !== null)? obj.schedule : null;
        this.alcoholInteractionDescription = (obj.alcohol_interaction_description !== undefined && obj.alcohol_interaction_description !== null)? obj.alcohol_interaction_description : null;
        this.alcoholNteraction = (obj.alcohol_nteraction !== undefined && obj.alcohol_nteraction !== null)? obj.alcohol_nteraction : null;
        //Append to variable dictionary
        this._variableDict['pregnancyCategory'] = 'pregnancy_category';
        this._variableDict['lactationCategory'] = 'lactation_category';
        this._variableDict['genricId'] = 'genric_id';
        this._variableDict['sideEffects'] = 'side_effects';
        this._variableDict['howItWorks'] = 'how_it_works';
        this._variableDict['therapeuticClass'] = 'therapeutic_class';
        this._variableDict['usedFor'] = 'used_for';
        this._variableDict['alcoholInteractionDescription'] = 'alcohol_interaction_description';
        this._variableDict['alcoholNteraction'] = 'alcohol_nteraction';
    }
};

AllGenericsResponse.prototype = new BaseModel();
AllGenericsResponse.prototype.constructor = AllGenericsResponse;

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AllGenericsResponse.prototype.getName = function() {
    return this.name;
};

/**
 * Setter for Name
 * 
 * @param {string} value 
 */
AllGenericsResponse.prototype.setName = function(value) {
    this.name = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AllGenericsResponse.prototype.getPregnancyCategory = function() {
    return this.pregnancyCategory;
};

/**
 * Setter for PregnancyCategory
 * 
 * @param {string} value 
 */
AllGenericsResponse.prototype.setPregnancyCategory = function(value) {
    this.pregnancyCategory = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AllGenericsResponse.prototype.getLactationCategory = function() {
    return this.lactationCategory;
};

/**
 * Setter for LactationCategory
 * 
 * @param {string} value 
 */
AllGenericsResponse.prototype.setLactationCategory = function(value) {
    this.lactationCategory = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AllGenericsResponse.prototype.getInstructions = function() {
    return this.instructions;
};

/**
 * Setter for Instructions
 * 
 * @param {string} value 
 */
AllGenericsResponse.prototype.setInstructions = function(value) {
    this.instructions = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AllGenericsResponse.prototype.getFaqs = function() {
    return this.faqs;
};

/**
 * Setter for Faqs
 * 
 * @param {string} value 
 */
AllGenericsResponse.prototype.setFaqs = function(value) {
    this.faqs = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {int}
 */
AllGenericsResponse.prototype.getGenricId = function() {
    return this.genricId;
};

/**
 * Setter for GenricId
 * 
 * @param {int} value 
 */
AllGenericsResponse.prototype.setGenricId = function(value) {
    this.genricId = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AllGenericsResponse.prototype.getSideEffects = function() {
    return this.sideEffects;
};

/**
 * Setter for SideEffects
 * 
 * @param {string} value 
 */
AllGenericsResponse.prototype.setSideEffects = function(value) {
    this.sideEffects = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AllGenericsResponse.prototype.getHowItWorks = function() {
    return this.howItWorks;
};

/**
 * Setter for HowItWorks
 * 
 * @param {string} value 
 */
AllGenericsResponse.prototype.setHowItWorks = function(value) {
    this.howItWorks = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AllGenericsResponse.prototype.getTherapeuticClass = function() {
    return this.therapeuticClass;
};

/**
 * Setter for TherapeuticClass
 * 
 * @param {string} value 
 */
AllGenericsResponse.prototype.setTherapeuticClass = function(value) {
    this.therapeuticClass = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AllGenericsResponse.prototype.getUsedFor = function() {
    return this.usedFor;
};

/**
 * Setter for UsedFor
 * 
 * @param {string} value 
 */
AllGenericsResponse.prototype.setUsedFor = function(value) {
    this.usedFor = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AllGenericsResponse.prototype.getStrength = function() {
    return this.strength;
};

/**
 * Setter for Strength
 * 
 * @param {string} value 
 */
AllGenericsResponse.prototype.setStrength = function(value) {
    this.strength = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AllGenericsResponse.prototype.getSchedule = function() {
    return this.schedule;
};

/**
 * Setter for Schedule
 * 
 * @param {string} value 
 */
AllGenericsResponse.prototype.setSchedule = function(value) {
    this.schedule = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
AllGenericsResponse.prototype.getAlcoholInteractionDescription = function() {
    return this.alcoholInteractionDescription;
};

/**
 * Setter for AlcoholInteractionDescription
 * 
 * @param {string} value 
 */
AllGenericsResponse.prototype.setAlcoholInteractionDescription = function(value) {
    this.alcoholInteractionDescription = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {bool}
 */
AllGenericsResponse.prototype.getAlcoholNteraction = function() {
    return this.alcoholNteraction;
};

/**
 * Setter for AlcoholNteraction
 * 
 * @param {bool} value 
 */
AllGenericsResponse.prototype.setAlcoholNteraction = function(value) {
    this.alcoholNteraction = value;
};


module.exports = AllGenericsResponse;
