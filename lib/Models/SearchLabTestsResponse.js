
/**
 * HealthOSLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
var BaseModel = require("./BaseModel");

/**
 * Creates an instance of SearchLabTestsResponse
 *
 * @constructor
 */
SearchLabTestsResponse = function (obj) {
    if(!obj) {
        this.alternateName = null;     
        this.labTestData = null;     
        this.labTestId = null;     
        this.labTestName = null;     
        this.id = null;     
        this.searchScore = null;     
        //Append to variable dictionary
        this._variableDict['alternateName'] = 'alternate_name';
        this._variableDict['labTestData'] = 'lab_test_data';
        this._variableDict['labTestId'] = 'lab_test_id';
        this._variableDict['labTestName'] = 'lab_test_name';
        this._variableDict['searchScore'] = 'search_score';
    } else {
        this.alternateName = (obj.alternate_name !== undefined && obj.alternate_name !== null)? obj.alternate_name : null;
        this.labTestData = (obj.lab_test_data !== undefined && obj.lab_test_data !== null)? new LabTestData(obj.lab_test_data) : null;
        this.labTestId = (obj.lab_test_id !== undefined && obj.lab_test_id !== null)? obj.lab_test_id : null;
        this.labTestName = (obj.lab_test_name !== undefined && obj.lab_test_name !== null)? obj.lab_test_name : null;
        this.id = (obj.id !== undefined && obj.id !== null)? obj.id : null;
        this.searchScore = (obj.search_score !== undefined && obj.search_score !== null)? obj.search_score : null;
        //Append to variable dictionary
        this._variableDict['alternateName'] = 'alternate_name';
        this._variableDict['labTestData'] = 'lab_test_data';
        this._variableDict['labTestId'] = 'lab_test_id';
        this._variableDict['labTestName'] = 'lab_test_name';
        this._variableDict['searchScore'] = 'search_score';
    }
};

SearchLabTestsResponse.prototype = new BaseModel();
SearchLabTestsResponse.prototype.constructor = SearchLabTestsResponse;

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
SearchLabTestsResponse.prototype.getAlternateName = function() {
    return this.alternateName;
};

/**
 * Setter for AlternateName
 * 
 * @param {string} value 
 */
SearchLabTestsResponse.prototype.setAlternateName = function(value) {
    this.alternateName = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {LabTestData}
 */
SearchLabTestsResponse.prototype.getLabTestData = function() {
    return this.labTestData;
};

/**
 * Setter for LabTestData
 * 
 * @param {LabTestData} value 
 */
SearchLabTestsResponse.prototype.setLabTestData = function(value) {
    this.labTestData = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
SearchLabTestsResponse.prototype.getLabTestId = function() {
    return this.labTestId;
};

/**
 * Setter for LabTestId
 * 
 * @param {string} value 
 */
SearchLabTestsResponse.prototype.setLabTestId = function(value) {
    this.labTestId = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
SearchLabTestsResponse.prototype.getLabTestName = function() {
    return this.labTestName;
};

/**
 * Setter for LabTestName
 * 
 * @param {string} value 
 */
SearchLabTestsResponse.prototype.setLabTestName = function(value) {
    this.labTestName = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
SearchLabTestsResponse.prototype.getId = function() {
    return this.id;
};

/**
 * Setter for Id
 * 
 * @param {string} value 
 */
SearchLabTestsResponse.prototype.setId = function(value) {
    this.id = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {double}
 */
SearchLabTestsResponse.prototype.getSearchScore = function() {
    return this.searchScore;
};

/**
 * Setter for SearchScore
 * 
 * @param {double} value 
 */
SearchLabTestsResponse.prototype.setSearchScore = function(value) {
    this.searchScore = value;
};


module.exports = SearchLabTestsResponse;
