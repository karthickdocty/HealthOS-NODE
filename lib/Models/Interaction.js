
/**
 * HealthOSLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
var BaseModel = require("./BaseModel");

/**
 * Creates an instance of Interaction
 *
 * @constructor
 */
Interaction = function (obj) {
    if(!obj) {
        this.items = null;     
        this.severity = null;     
        this.description = null;     
        this.source = null;     
    } else {
        this.items = (obj.items !== undefined && obj.items !== null)? obj.items.map(function(model){
            return new Item(model);
        }) : null;
        this.severity = (obj.severity !== undefined && obj.severity !== null)? obj.severity : null;
        this.description = (obj.description !== undefined && obj.description !== null)? obj.description : null;
        this.source = (obj.source !== undefined && obj.source !== null)? obj.source : null;
    }
};

Interaction.prototype = new BaseModel();
Interaction.prototype.constructor = Interaction;

/**
 * TODO: Write general description for this method
 *
 * @return {array}
 */
Interaction.prototype.getItems = function() {
    return this.items;
};

/**
 * Setter for Items
 * 
 * @param {array} value 
 */
Interaction.prototype.setItems = function(value) {
    this.items = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
Interaction.prototype.getSeverity = function() {
    return this.severity;
};

/**
 * Setter for Severity
 * 
 * @param {string} value 
 */
Interaction.prototype.setSeverity = function(value) {
    this.severity = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
Interaction.prototype.getDescription = function() {
    return this.description;
};

/**
 * Setter for Description
 * 
 * @param {string} value 
 */
Interaction.prototype.setDescription = function(value) {
    this.description = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string}
 */
Interaction.prototype.getSource = function() {
    return this.source;
};

/**
 * Setter for Source
 * 
 * @param {string} value 
 */
Interaction.prototype.setSource = function(value) {
    this.source = value;
};


module.exports = Interaction;
